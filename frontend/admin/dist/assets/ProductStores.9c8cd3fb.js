import{A as i,B as a,I as s,C as c,D as l,E as n}from"./index.bfbf74aa.js";n(a);const d=i("product",{state:()=>({product_name:"",about_product:"",price:"",c_id:"",categories:[],image_url:[],base64str:"",type:"",f_name:"",ObjectFile:[],file:"",adding_product:!1}),actions:{async products(){},async insert_product(){try{console.log({product_name:this.product_name,about_product:this.about_product,category_id:this.c_id,product_image:this.image_url.join(),price:this.price}),await this.add_image();const t=a.mutate({mutation:s,variables:{product_name:this.product_name,about_product:this.about_product,category_id:this.c_id,product_image:this.image_url.join(),price:this.price}});console.log(t)}catch(t){return console.log(t),t.message}},async category(){const{data:t}=await a.query({query:c});return this.categories=t.category,console.log(this.categories),this.categories},async add_image(){console.log("on loop");try{for(let o=0;o<this.ObjectFile.length;o++){console.log("inside a loop"+this.ObjectFile[o]);var t=this.ObjectFile[o];console.log(t);try{var e=await p(t);this.image_url.push(e),console.log(e)}catch(r){console.log(r)}}}catch(o){console.log(o)}}},getters:{}}),p=async t=>{try{const e=await a.mutate({mutation:l,variables:{name:t.file.name,type:t.file.type,base64str:t.base64str}});return console.log(e.data.fileupload.file_path),e.data.fileupload.file_path}catch(e){console.log(e)}};export{d as P};
